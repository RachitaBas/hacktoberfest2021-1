#include<stdio.h>
#include<string.h>
#include<stdlib.h>
char str1[1000];
int i,j,len,count;
int encryption(char str[],int code[][1000],int rails)
{
	int t=0;
count=0;
j=0;
while(j<len)
{
if(count%2==0)
{
 for(i=0;i<rails;i++)
 {
  //strcpy(code[i][j],str[j]);
  code[i][j]=(int)str[j]; 
  j++;
 }
 
}
else
{

 for(i=rails-2;i>0;i--)
 {
  code[i][j]=(int)str[j];
 j++;
 }  
} 

count++;
}

for(i=0;i<rails;i++)
{
 for(j=0;j<len;j++)
 {
  if(code[i][j]!=0)
  {
  printf("%c",code[i][j]);
  str1[t]=(char)code[i][j];
  t++;
}
 }
 
}
}
int decryption(int code[][1000],int rails)
{
	int k;
count=0;
j=0;
while(j<len)
{
if(count%2==0)
{
 for(i=0;i<rails;i++)
 {
  //strcpy(code[i][j],str[j]);
  code[i][j]=-1; 
  j++;
 }
 
}
else
{

 for(i=rails-2;i>0;i--)
 {
  code[i][j]=-1;
 j++;
 }  
} 

count++;
}
//Decrypting here.Above is same as encryption but instead of keeping letters we stored it with -1 i.e. dashes(in view)
k=0;
for(i=0;i<rails;i++)
{
 for(j=0;j<len;j++)
 {
  if(code[i][j]!=0)
  {
     code[i][j]=(int)str1[k];
     k++;
  }
 } 
}
//repeating above procedure
count=0;
j=0;
while(j<len)
{
if(count%2==0)
{
 for(i=0;i<rails;i++)
 {
  //strcpy(code[i][j],str[j]);
  printf("%c",code[i][j]); 
  j++;
 }
 
}
else
{

 for(i=rails-2;i>0;i--)
 {
  printf("%c",code[i][j]);
 j++;
 }  
} 

count++;
}
printf("\n");
}

int main()
{
 int rails,code[100][1000];
char str[1000];
printf("Enter a Secret Message\n");
gets(str);
printf("Enter number of rails\n");
scanf("%d",&rails);
len=strlen(str);
 for(i=0;i<rails;i++)
 {
  for(j=0;j<len;j++)
  {
   code[i][j]=0;
  }
 }
encryption(str,code,rails);
printf("\n");

decryption(code,rails);
return 0;
}
